set(TARGET main)
find_library(IBVERBS_LIBRARY ibverbs HINTS /home/atr/local/lib)
find_library(RDMACM_LIBRARY rdmacm HINTS /home/atr/local/lib)
link_libraries(pthread ${IBVERBS_LIBRARY} ${RDMACM_LIBRARY})

add_executable(${TARGET} main.cpp)
if(LLAMA_BUILD_RDMA_server)
    set(TARGET_ main_server)
    add_executable(${TARGET_} main_server.cpp )
    # add_executable(${TARGET_} main_server.cpp  ${PROJECT_SOURCE_DIR}/rdma-example/src/rdma_common.h)
elseif(LLAMA_BUILD_RDMA_client)
    set(TARGET_ main_client)
    add_executable(${TARGET_} main_client.cpp )
    # add_executable(${TARGET_} main_client.cpp  ${PROJECT_SOURCE_DIR}/rdma-example/src/rdma_common.h)
    endif()
# target_include_directories(${TARGET_} PRIVATE ${PROJECT_SOURCE_DIR}/rdma-example/src)

install(TARGETS ${TARGET} RUNTIME)
install(TARGETS ${TARGET_} RUNTIME)
target_link_libraries(${TARGET} PRIVATE common llama ${CMAKE_THREAD_LIBS_INIT})
target_link_libraries(${TARGET_} PRIVATE common llama  ${CMAKE_THREAD_LIBS_INIT})
target_compile_features(${TARGET} PRIVATE cxx_std_11)
target_compile_features(${TARGET_} PRIVATE cxx_std_11)
find_library(IBVERBS_LIBRARY ibverbs HINTS /home/atr/local/lib)
find_library(RDMACM_LIBRARY rdmacm HINTS /home/atr/local/lib)